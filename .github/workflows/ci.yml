name: CI
on:
  merge_group:
  pull_request:
jobs:
  golangci:
    name: pull-clusternet-golang-ci
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    strategy:
      max-parallel: 3
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: [ 1.21.x, 1.22.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      - name: Cache go modules and build cache
        uses: actions/cache@v4.0.1
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ${{ env.GOPATH }}/pkg/mod
            ${{ env.GOPATH }}/pkg/sumdb
            ~/.cache/go-build
            ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ matrix.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-
      - name: Golang Lint
        run: make lint
  verify:
    name: pull-clusternet-verify
    needs: golangci # rely on golangci successful completion
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    strategy:
      max-parallel: 2
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: [ 1.21.x, 1.22.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      - name: Configure git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Rebase code
        run: git rebase origin/main
      - name: Cache go modules and build cache
        uses: actions/cache@v4.0.1
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ${{ env.GOPATH }}/pkg/mod
            ${{ env.GOPATH }}/pkg/sumdb
            ~/.cache/go-build
            ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ matrix.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-
      - name: verify format, crds and codegen
        run: |
          make verify
  test:
    name: pull-clusternet-unit-test
    needs: verify # rely on verify successful completion
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    strategy:
      max-parallel: 2
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: [ 1.21.x, 1.22.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      - name: Configure git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Rebase code
        run: git rebase origin/main
      - name: Cache go modules and build cache
        uses: actions/cache@v4.0.1
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ${{ env.GOPATH }}/pkg/mod
            ${{ env.GOPATH }}/pkg/sumdb
            ~/.cache/go-build
            ~/Library/Caches/go-build
          #  %LocalAppData%\go-build
          key: ${{ matrix.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-
      - name: Run tests
        run: make test
      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.21.x' && github.repository_owner == 'clusternet'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}/coverage.out
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
