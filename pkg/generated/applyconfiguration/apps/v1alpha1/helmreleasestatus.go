/*
Copyright The Clusternet Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	release "helm.sh/helm/v3/pkg/release"
)

// HelmReleaseStatusApplyConfiguration represents an declarative configuration of the HelmReleaseStatus type for use
// with apply.
type HelmReleaseStatusApplyConfiguration struct {
	FirstDeployed *string         `json:"firstDeployed,omitempty"`
	LastDeployed  *string         `json:"lastDeployed,omitempty"`
	Description   *string         `json:"description,omitempty"`
	Phase         *release.Status `json:"phase,omitempty"`
	Notes         *string         `json:"notes,omitempty"`
	Version       *int            `json:"version,omitempty"`
}

// HelmReleaseStatusApplyConfiguration constructs an declarative configuration of the HelmReleaseStatus type for use with
// apply.
func HelmReleaseStatus() *HelmReleaseStatusApplyConfiguration {
	return &HelmReleaseStatusApplyConfiguration{}
}

// WithFirstDeployed sets the FirstDeployed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FirstDeployed field is set to the value of the last call.
func (b *HelmReleaseStatusApplyConfiguration) WithFirstDeployed(value string) *HelmReleaseStatusApplyConfiguration {
	b.FirstDeployed = &value
	return b
}

// WithLastDeployed sets the LastDeployed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastDeployed field is set to the value of the last call.
func (b *HelmReleaseStatusApplyConfiguration) WithLastDeployed(value string) *HelmReleaseStatusApplyConfiguration {
	b.LastDeployed = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *HelmReleaseStatusApplyConfiguration) WithDescription(value string) *HelmReleaseStatusApplyConfiguration {
	b.Description = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *HelmReleaseStatusApplyConfiguration) WithPhase(value release.Status) *HelmReleaseStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithNotes sets the Notes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Notes field is set to the value of the last call.
func (b *HelmReleaseStatusApplyConfiguration) WithNotes(value string) *HelmReleaseStatusApplyConfiguration {
	b.Notes = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *HelmReleaseStatusApplyConfiguration) WithVersion(value int) *HelmReleaseStatusApplyConfiguration {
	b.Version = &value
	return b
}
