/*
Copyright The Clusternet Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	types "k8s.io/apimachinery/pkg/types"
)

// FeedStatusPerClusterApplyConfiguration represents an declarative configuration of the FeedStatusPerCluster type for use
// with apply.
type FeedStatusPerClusterApplyConfiguration struct {
	ClusterID                    *types.UID `json:"clusterId,omitempty"`
	ClusterName                  *string    `json:"clusterName,omitempty"`
	FeedStatusApplyConfiguration `json:",inline"`
}

// FeedStatusPerClusterApplyConfiguration constructs an declarative configuration of the FeedStatusPerCluster type for use with
// apply.
func FeedStatusPerCluster() *FeedStatusPerClusterApplyConfiguration {
	return &FeedStatusPerClusterApplyConfiguration{}
}

// WithClusterID sets the ClusterID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterID field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithClusterID(value types.UID) *FeedStatusPerClusterApplyConfiguration {
	b.ClusterID = &value
	return b
}

// WithClusterName sets the ClusterName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterName field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithClusterName(value string) *FeedStatusPerClusterApplyConfiguration {
	b.ClusterName = &value
	return b
}

// WithAvailable sets the Available field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Available field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithAvailable(value bool) *FeedStatusPerClusterApplyConfiguration {
	b.Available = &value
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithObservedGeneration(value int64) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.ObservedGeneration = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithReplicas(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.Replicas = &value
	return b
}

// WithUpdatedReplicas sets the UpdatedReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdatedReplicas field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithUpdatedReplicas(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.UpdatedReplicas = &value
	return b
}

// WithCurrentReplicas sets the CurrentReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentReplicas field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithCurrentReplicas(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.CurrentReplicas = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithReadyReplicas(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.ReadyReplicas = &value
	return b
}

// WithAvailableReplicas sets the AvailableReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AvailableReplicas field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithAvailableReplicas(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.AvailableReplicas = &value
	return b
}

// WithUnavailableReplicas sets the UnavailableReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnavailableReplicas field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithUnavailableReplicas(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.UnavailableReplicas = &value
	return b
}

// WithActive sets the Active field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Active field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithActive(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.Active = &value
	return b
}

// WithSucceeded sets the Succeeded field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Succeeded field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithSucceeded(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.Succeeded = &value
	return b
}

// WithFailed sets the Failed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Failed field is set to the value of the last call.
func (b *FeedStatusPerClusterApplyConfiguration) WithFailed(value int32) *FeedStatusPerClusterApplyConfiguration {
	b.ensureReplicaStatusApplyConfigurationExists()
	b.Failed = &value
	return b
}

func (b *FeedStatusPerClusterApplyConfiguration) ensureReplicaStatusApplyConfigurationExists() {
	if b.ReplicaStatusApplyConfiguration == nil {
		b.ReplicaStatusApplyConfiguration = &ReplicaStatusApplyConfiguration{}
	}
}
