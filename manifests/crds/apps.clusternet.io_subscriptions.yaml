
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: subscriptions.apps.clusternet.io
spec:
  group: apps.clusternet.io
  names:
    categories:
    - clusternet
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    shortNames:
    - sub
    - subs
    singular: subscription
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Subscription represents the policy that install a group of resources
          to one or more clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SubscriptionSpec defines the desired state of Subscription
            properties:
              clusterTolerations:
                description: ClusterTolerations tolerates any matched taints of ManagedCluster.
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              dividingScheduling:
                description: Dividing scheduling config params. Present only if SchedulingStrategy
                  = Dividing.
                properties:
                  dynamicDividing:
                    description: DynamicDividing describes how to divide replicas
                      into target clusters dynamically.
                    properties:
                      maxClusters:
                        description: MaxClusters describes the upper bound number
                          of target clusters.
                        format: int32
                        type: integer
                      minClusters:
                        description: MinClusters describes the lower bound number
                          of target clusters.
                        format: int32
                        type: integer
                      preferredClusters:
                        description: PreferredClusters describes the assigning preference.
                          If we have a preference for cluster group A compared to
                          cluster group B (i.e., group A has a larger Weight), desired
                          replicas will be assigned to cluster group A as many as
                          possible, while the rest ones will be assigned to cluster
                          group B.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      strategy:
                        default: Spread
                        description: Type of dynamic dividing replica strategy.
                        enum:
                        - Spread
                        - Binpack
                        type: string
                      topologySpreadConstraints:
                        description: TopologySpreadConstraints describes how a group
                          of replicas ought to spread across topology domains. Scheduler
                          will schedule pods in a way which abides by the constraints.
                          All topologySpreadConstraints are ANDed. Present only for
                          spread divided scheduling.
                        items:
                          description: TopologySpreadConstraint specifies how to spread
                            matching pods among the given topology.
                          properties:
                            labelSelector:
                              description: LabelSelector is used to find matching
                                pods. Pods that match this label selector are counted
                                to determine the number of pods in their corresponding
                                topology domain.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            maxSkew:
                              description: 'MaxSkew describes the degree to which
                                pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                                it is the maximum permitted difference between the
                                number of matching pods in the target topology and
                                the global minimum. For example, in a 3-zone cluster,
                                MaxSkew is set to 1, and pods with the same labelSelector
                                spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       |
                                - if MaxSkew is 1, incoming pod can only be scheduled
                                to zone3 to become 1/1/1; scheduling it onto zone1(zone2)
                                would make the ActualSkew(2-0) on zone1(zone2) violate
                                MaxSkew(1). - if MaxSkew is 2, incoming pod can be
                                scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                it is used to give higher precedence to topologies
                                that satisfy it. It''s a required field. Default value
                                is 1 and 0 is not allowed.'
                              format: int32
                              type: integer
                            topologyKey:
                              description: TopologyKey is the key of node labels.
                                Nodes that have a label with this key and identical
                                values are considered to be in the same topology.
                                We consider each <key, value> as a "bucket", and try
                                to put balanced number of pods into each bucket. It's
                                a required field.
                              type: string
                            whenUnsatisfiable:
                              description: 'WhenUnsatisfiable indicates how to deal
                                with a pod if it doesn''t satisfy the spread constraint.
                                - DoNotSchedule (default) tells the scheduler not
                                to schedule it. - ScheduleAnyway tells the scheduler
                                to schedule the pod in any location,   but giving
                                higher precedence to topologies that would help reduce
                                the   skew. A constraint is considered "Unsatisfiable"
                                for an incoming pod if and only if every possible
                                node assignment for that pod would violate "MaxSkew"
                                on some topology. For example, in a 3-zone cluster,
                                MaxSkew is set to 1, and pods with the same labelSelector
                                spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P
                                |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule,
                                incoming pod can only be scheduled to zone2(zone3)
                                to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3)
                                satisfies MaxSkew(1). In other words, the cluster
                                can still be imbalanced, but scheduler won''t make
                                it *more* imbalanced. It''s a required field.'
                              type: string
                          required:
                          - maxSkew
                          - topologyKey
                          - whenUnsatisfiable
                          type: object
                        type: array
                    required:
                    - strategy
                    type: object
                  type:
                    default: Static
                    description: Type of dividing replica scheduling.
                    enum:
                    - Static
                    - Dynamic
                    type: string
                required:
                - type
                type: object
              feeds:
                description: Feeds
                items:
                  description: Feed defines the resource to be selected.
                  properties:
                    apiVersion:
                      description: APIVersion defines the versioned schema of this
                        representation of an object.
                      type: string
                    kind:
                      description: Kind is a string value representing the REST resource
                        this object represents. In CamelCase.
                      type: string
                    name:
                      description: Name of the target resource.
                      type: string
                    namespace:
                      description: Namespace of the target resource.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
              schedulerName:
                default: default
                description: If specified, the Subscription will be handled by specified
                  scheduler. If not specified, the Subscription will be handled by
                  default scheduler.
                type: string
              schedulingStrategy:
                default: Replication
                description: If specified, the Subscription will be handled with specified
                  SchedulingStrategy. Otherwise, with generic SchedulingStrategy.
                enum:
                - Replication
                - Dividing
                type: string
              subscribers:
                description: Subscribers subscribes
                items:
                  description: Subscriber defines
                  properties:
                    clusterAffinity:
                      description: ClusterAffinity is a label query over managed clusters
                        by labels.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    weight:
                      description: Static weight of subscriber when dividing replicas.
                        Present only for static divided scheduling.
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                  - clusterAffinity
                  type: object
                type: array
            required:
            - feeds
            - subscribers
            type: object
          status:
            description: SubscriptionStatus defines the observed state of Subscription
            properties:
              aggregatedStatuses:
                description: AggregatedStatuses shows the aggregated statuses of feeds
                  that are running in each child cluster.
                items:
                  description: AggregatedStatus contains aggregated status of current
                    feed.
                  properties:
                    apiVersion:
                      description: APIVersion defines the versioned schema of this
                        representation of an object.
                      type: string
                    feedStatusDetails:
                      description: FeedStatusDetails shows the feed statuses in each
                        child cluster.
                      items:
                        description: FeedStatusPerCluster shows the feed status running
                          in current cluster.
                        properties:
                          available:
                            description: Available indicates whether the feed status
                              is synced successfully to corresponding Description.
                            type: boolean
                          clusterId:
                            description: ClusterID indicates the id of current cluster.
                            pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
                            type: string
                          clusterName:
                            description: ClusterName is the cluster name.
                            maxLength: 30
                            pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?([a-z0-9]([-a-z0-9]*[a-z0-9]))*'
                            type: string
                          replicaStatus:
                            description: ReplicaStatus indicates the replica status
                              of workload-type feed, such as Deployment/StatefulSet/Job.
                            properties:
                              active:
                                description: The number of pending and running pods.
                                format: int32
                                type: integer
                              availableReplicas:
                                description: Total number of available pods (ready
                                  for at least minReadySeconds) targeted by this workload.
                                format: int32
                                type: integer
                              currentReplicas:
                                description: currentReplicas is the number of Pods
                                  created by the workload controller from the StatefulSet
                                  version indicated by currentRevision.
                                format: int32
                                type: integer
                              failed:
                                description: The number of pods which reached phase
                                  Failed.
                                format: int32
                                type: integer
                              observedGeneration:
                                description: The generation observed by the workload
                                  controller.
                                format: int64
                                type: integer
                              readyReplicas:
                                description: readyReplicas is the number of pods targeted
                                  by this workload with a Ready Condition.
                                format: int32
                                type: integer
                              replicas:
                                description: Total number of non-terminated pods targeted
                                  by this workload (their labels match the selector).
                                format: int32
                                type: integer
                              succeeded:
                                description: The number of pods which reached phase
                                  Succeeded.
                                format: int32
                                type: integer
                              unavailableReplicas:
                                description: Total number of unavailable pods targeted
                                  by this workload. This is the total number of pods
                                  that are still required for the workload to have
                                  100% available capacity. They may either be pods
                                  that are running but not yet available or pods that
                                  still have not been created.
                                format: int32
                                type: integer
                              updatedReplicas:
                                description: Total number of non-terminated pods targeted
                                  by this workload that have the desired template
                                  spec.
                                format: int32
                                type: integer
                            type: object
                        type: object
                      type: array
                    feedStatusSummary:
                      description: FeedStatusSummary aggregates the feed statuses
                        from each child cluster.
                      properties:
                        available:
                          description: Available indicates whether the feed status
                            is synced successfully to corresponding Description.
                          type: boolean
                        replicaStatus:
                          description: ReplicaStatus indicates the replica status
                            of workload-type feed, such as Deployment/StatefulSet/Job.
                          properties:
                            active:
                              description: The number of pending and running pods.
                              format: int32
                              type: integer
                            availableReplicas:
                              description: Total number of available pods (ready for
                                at least minReadySeconds) targeted by this workload.
                              format: int32
                              type: integer
                            currentReplicas:
                              description: currentReplicas is the number of Pods created
                                by the workload controller from the StatefulSet version
                                indicated by currentRevision.
                              format: int32
                              type: integer
                            failed:
                              description: The number of pods which reached phase
                                Failed.
                              format: int32
                              type: integer
                            observedGeneration:
                              description: The generation observed by the workload
                                controller.
                              format: int64
                              type: integer
                            readyReplicas:
                              description: readyReplicas is the number of pods targeted
                                by this workload with a Ready Condition.
                              format: int32
                              type: integer
                            replicas:
                              description: Total number of non-terminated pods targeted
                                by this workload (their labels match the selector).
                              format: int32
                              type: integer
                            succeeded:
                              description: The number of pods which reached phase
                                Succeeded.
                              format: int32
                              type: integer
                            unavailableReplicas:
                              description: Total number of unavailable pods targeted
                                by this workload. This is the total number of pods
                                that are still required for the workload to have 100%
                                available capacity. They may either be pods that are
                                running but not yet available or pods that still have
                                not been created.
                              format: int32
                              type: integer
                            updatedReplicas:
                              description: Total number of non-terminated pods targeted
                                by this workload that have the desired template spec.
                              format: int32
                              type: integer
                          type: object
                      type: object
                    kind:
                      description: Kind is a string value representing the REST resource
                        this object represents. In CamelCase.
                      type: string
                    name:
                      description: Name of the target resource.
                      type: string
                    namespace:
                      description: Namespace of the target resource.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
              bindingClusters:
                description: Namespaced names of targeted clusters that Subscription
                  binds to.
                items:
                  type: string
                type: array
              completedReleases:
                description: Total number of completed releases targeted by this Subscription.
                type: integer
              desiredReleases:
                description: Total number of Helm releases desired by this Subscription.
                type: integer
              replicas:
                additionalProperties:
                  items:
                    format: int32
                    type: integer
                  type: array
                description: Desired replicas of targeted clusters for each feed.
                type: object
              specHash:
                description: SpecHash calculates the hash value of current SubscriptionSpec.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
