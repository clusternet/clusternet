---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: globalizations.apps.clusternet.io
spec:
  group: apps.clusternet.io
  names:
    categories:
    - clusternet
    kind: Globalization
    listKind: GlobalizationList
    plural: globalizations
    shortNames:
    - glob
    - global
    singular: globalization
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Globalization represents the cluster-scoped override config for
          a group of resources.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GlobalizationSpec defines the desired state of Globalization
            properties:
              clusterAffinity:
                description: ClusterAffinity is a label query over managed clusters
                  by labels. If no labels are specified, all clusters will be selected.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              feed:
                description: Feed holds references to the objects the Globalization
                  applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation
                      of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource
                      this object represents. In CamelCase.
                    type: string
                  name:
                    description: Name of the target resource.
                    type: string
                  namespace:
                    description: Namespace of the target resource.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              overridePolicy:
                default: ApplyLater
                description: OverridePolicy specifies the override policy for this
                  Globalization.
                enum:
                - ApplyNow
                - ApplyLater
                type: string
              overrides:
                description: Overrides holds all the OverrideConfig.
                items:
                  description: OverrideConfig holds information that describes a override
                    config.
                  properties:
                    kyvernoConfig:
                      description: KyvernoPatchConfig kyverno style patch config
                      properties:
                        context:
                          description: Context defines variables and data sources
                            that can be used during rule execution.
                          items:
                            description: ContextEntry adds variables and data sources
                              to a rule Context. Either a ConfigMap reference or a
                              APILookup must be provided.
                            properties:
                              apiCall:
                                description: APICall defines an HTTP request to the
                                  Kubernetes API server. The JSON data retrieved is
                                  stored in the context.
                                properties:
                                  jmesPath:
                                    description: JMESPath is an optional JSON Match
                                      Expression that can be used to transform the
                                      JSON response returned from the API server.
                                      For example a JMESPath of "items | length(@)"
                                      applied to the API server response to the URLPath
                                      "/apis/apps/v1/deployments" will return the
                                      total count of deployments across all namespaces.
                                    type: string
                                  urlPath:
                                    description: URLPath is the URL path to be used
                                      in the HTTP GET request to the Kubernetes API
                                      server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments").
                                      The format required is the same format used
                                      by the `kubectl get --raw` command.
                                    type: string
                                required:
                                - urlPath
                                type: object
                              configMap:
                                description: ConfigMap is the ConfigMap reference.
                                properties:
                                  name:
                                    description: Name is the ConfigMap name.
                                    type: string
                                  namespace:
                                    description: Namespace is the ConfigMap namespace.
                                    type: string
                                required:
                                - name
                                type: object
                              imageRegistry:
                                description: ImageRegistry defines requests to an
                                  OCI/Docker V2 registry to fetch image details.
                                properties:
                                  jmesPath:
                                    description: JMESPath is an optional JSON Match
                                      Expression that can be used to transform the
                                      ImageData struct returned as a result of processing
                                      the image reference.
                                    type: string
                                  reference:
                                    description: 'Reference is image reference to
                                      a container image in the registry. Example:
                                      ghcr.io/kyverno/kyverno:latest'
                                    type: string
                                required:
                                - reference
                                type: object
                              name:
                                description: Name is the variable name.
                                type: string
                              variable:
                                description: Variable defines an arbitrary JMESPath
                                  context variable that can be defined inline.
                                properties:
                                  default:
                                    description: Default is an optional arbitrary
                                      JSON object that the variable may take if the
                                      JMESPath expression evaluates to nil
                                    x-kubernetes-preserve-unknown-fields: true
                                  jmesPath:
                                    description: JMESPath is an optional JMESPath
                                      Expression that can be used to transform the
                                      variable.
                                    type: string
                                  value:
                                    description: Value is any arbitrary JSON object
                                      representable in YAML or JSON form.
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                            type: object
                          type: array
                        mutate:
                          description: Mutation is used to modify matching resources.
                          properties:
                            foreach:
                              description: ForEach applies mutation rules to a list
                                of sub-elements by creating a context for each entry
                                in the list and looping over it to apply the specified
                                logic.
                              items:
                                description: ForEach applies mutation rules to a list
                                  of sub-elements by creating a context for each entry
                                  in the list and looping over it to apply the specified
                                  logic.
                                properties:
                                  context:
                                    description: Context defines variables and data
                                      sources that can be used during rule execution.
                                    items:
                                      description: ContextEntry adds variables and
                                        data sources to a rule Context. Either a ConfigMap
                                        reference or a APILookup must be provided.
                                      properties:
                                        apiCall:
                                          description: APICall defines an HTTP request
                                            to the Kubernetes API server. The JSON
                                            data retrieved is stored in the context.
                                          properties:
                                            jmesPath:
                                              description: JMESPath is an optional
                                                JSON Match Expression that can be
                                                used to transform the JSON response
                                                returned from the API server. For
                                                example a JMESPath of "items | length(@)"
                                                applied to the API server response
                                                to the URLPath "/apis/apps/v1/deployments"
                                                will return the total count of deployments
                                                across all namespaces.
                                              type: string
                                            urlPath:
                                              description: URLPath is the URL path
                                                to be used in the HTTP GET request
                                                to the Kubernetes API server (e.g.
                                                "/api/v1/namespaces" or  "/apis/apps/v1/deployments").
                                                The format required is the same format
                                                used by the `kubectl get --raw` command.
                                              type: string
                                          required:
                                          - urlPath
                                          type: object
                                        configMap:
                                          description: ConfigMap is the ConfigMap
                                            reference.
                                          properties:
                                            name:
                                              description: Name is the ConfigMap name.
                                              type: string
                                            namespace:
                                              description: Namespace is the ConfigMap
                                                namespace.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        imageRegistry:
                                          description: ImageRegistry defines requests
                                            to an OCI/Docker V2 registry to fetch
                                            image details.
                                          properties:
                                            jmesPath:
                                              description: JMESPath is an optional
                                                JSON Match Expression that can be
                                                used to transform the ImageData struct
                                                returned as a result of processing
                                                the image reference.
                                              type: string
                                            reference:
                                              description: 'Reference is image reference
                                                to a container image in the registry.
                                                Example: ghcr.io/kyverno/kyverno:latest'
                                              type: string
                                          required:
                                          - reference
                                          type: object
                                        name:
                                          description: Name is the variable name.
                                          type: string
                                        variable:
                                          description: Variable defines an arbitrary
                                            JMESPath context variable that can be
                                            defined inline.
                                          properties:
                                            default:
                                              description: Default is an optional
                                                arbitrary JSON object that the variable
                                                may take if the JMESPath expression
                                                evaluates to nil
                                              x-kubernetes-preserve-unknown-fields: true
                                            jmesPath:
                                              description: JMESPath is an optional
                                                JMESPath Expression that can be used
                                                to transform the variable.
                                              type: string
                                            value:
                                              description: Value is any arbitrary
                                                JSON object representable in YAML
                                                or JSON form.
                                              x-kubernetes-preserve-unknown-fields: true
                                          type: object
                                      type: object
                                    type: array
                                  list:
                                    description: List specifies a JMESPath expression
                                      that results in one or more elements to which
                                      the validation logic is applied.
                                    type: string
                                  patchStrategicMerge:
                                    description: PatchStrategicMerge is a strategic
                                      merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/
                                      and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                    x-kubernetes-preserve-unknown-fields: true
                                  patchesJson6902:
                                    description: PatchesJSON6902 is a list of RFC
                                      6902 JSON Patch declarations used to modify
                                      resources. See https://tools.ietf.org/html/rfc6902
                                      and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                    type: string
                                  preconditions:
                                    description: 'AnyAllConditions are used to determine
                                      if a policy rule should be applied by evaluating
                                      a set of conditions. The declaration can contain
                                      nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                    properties:
                                      all:
                                        description: AllConditions enable variable-based
                                          conditional rule execution. This is useful
                                          for finer control of when an rule is applied.
                                          A condition can reference object data using
                                          JMESPath notation. Here, all of the conditions
                                          need to pass
                                        items:
                                          description: Condition defines variable-based
                                            conditional criteria for rule execution.
                                          properties:
                                            key:
                                              description: Key is the context entry
                                                (using JMESPath) for conditional rule
                                                evaluation.
                                              x-kubernetes-preserve-unknown-fields: true
                                            operator:
                                              description: 'Operator is the conditional
                                                operation to perform. Valid operators
                                                are: Equals, NotEquals, In, AnyIn,
                                                AllIn, NotIn, AnyNotIn, AllNotIn,
                                                GreaterThanOrEquals, GreaterThan,
                                                LessThanOrEquals, LessThan, DurationGreaterThanOrEquals,
                                                DurationGreaterThan, DurationLessThanOrEquals,
                                                DurationLessThan'
                                              enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                              type: string
                                            value:
                                              description: Value is the conditional
                                                value, or set of values. The values
                                                can be fixed set or can be variables
                                                declared using JMESPath.
                                              x-kubernetes-preserve-unknown-fields: true
                                          type: object
                                        type: array
                                      any:
                                        description: AnyConditions enable variable-based
                                          conditional rule execution. This is useful
                                          for finer control of when an rule is applied.
                                          A condition can reference object data using
                                          JMESPath notation. Here, at least one of
                                          the conditions need to pass
                                        items:
                                          description: Condition defines variable-based
                                            conditional criteria for rule execution.
                                          properties:
                                            key:
                                              description: Key is the context entry
                                                (using JMESPath) for conditional rule
                                                evaluation.
                                              x-kubernetes-preserve-unknown-fields: true
                                            operator:
                                              description: 'Operator is the conditional
                                                operation to perform. Valid operators
                                                are: Equals, NotEquals, In, AnyIn,
                                                AllIn, NotIn, AnyNotIn, AllNotIn,
                                                GreaterThanOrEquals, GreaterThan,
                                                LessThanOrEquals, LessThan, DurationGreaterThanOrEquals,
                                                DurationGreaterThan, DurationLessThanOrEquals,
                                                DurationLessThan'
                                              enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                              type: string
                                            value:
                                              description: Value is the conditional
                                                value, or set of values. The values
                                                can be fixed set or can be variables
                                                declared using JMESPath.
                                              x-kubernetes-preserve-unknown-fields: true
                                          type: object
                                        type: array
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              type: array
                            patchStrategicMerge:
                              description: PatchStrategicMerge is a strategic merge
                                patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/
                                and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                              x-kubernetes-preserve-unknown-fields: true
                            patchesJson6902:
                              description: PatchesJSON6902 is a list of RFC 6902 JSON
                                Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902
                                and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                              type: string
                            targets:
                              description: Targets defines the target resources to
                                be mutated.
                              items:
                                properties:
                                  apiVersion:
                                    description: APIVersion specifies resource apiVersion.
                                    type: string
                                  kind:
                                    description: Kind specifies resource kind.
                                    type: string
                                  name:
                                    description: Name specifies the resource name.
                                    type: string
                                  namespace:
                                    description: Namespace specifies resource namespace.
                                    type: string
                                type: object
                              type: array
                          type: object
                        preconditions:
                          description: 'Preconditions are used to determine if a policy
                            rule should be applied by evaluating a set of conditions.
                            The declaration can contain nested `any` or `all` statements.
                            A direct list of conditions (without `any` or `all` statements
                            is supported for backwards compatibility but will be deprecated
                            in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    name:
                      description: Name indicate the OverrideConfig name.
                      type: string
                    overrideChart:
                      description: OverrideChart indicates whether the override value
                        for the HelmChart CR.
                      type: boolean
                    type:
                      description: Type specifies the override type for override value.
                      enum:
                      - Helm
                      - JSONPatch
                      - MergePatch
                      - KyvernoPatch
                      type: string
                    value:
                      description: Value represents override value.
                      type: string
                  required:
                  - type
                  type: object
                type: array
              priority:
                default: 500
                description: Priority is an integer defining the relative importance
                  of this Globalization compared to others. Lower numbers are considered
                  lower priority. And these Globalization(s) will be applied by order
                  from lower priority to higher. That means override values in lower
                  Globalization will be overridden by those in higher Globalization.
                format: int32
                maximum: 1000
                minimum: 0
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
